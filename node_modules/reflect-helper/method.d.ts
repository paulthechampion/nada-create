import { Parameter } from "./parameter";
import { Type } from "./type";
import { Property } from "./property";
/**
 * Information on a method.
 *
 * <uml>
 * hide members
 * hide circle
 * Property <|-- Method
 * Type *-- Method : methods
 * Method <-- Type : returnType
 * Method *- Parameter : parameters
 * </uml>
 */
export declare class Method extends Property {
    /**
     * Invokes the method on the given object with the specified arguments.
     * @param obj The object to invoke the method on.
     * @param args A list of arguments to pass to the method.
     */
    invoke(obj: any, args?: any[]): any;
    /**
     * @hidden
     */
    private _returnType;
    /**
     * The return type of the method. (Only available if the --emitDecoratorMetadata compiler option is enabled and the method is decorated.)
     */
    returnType: Type;
    /**
     * @hidden
     */
    private _getReturnType();
    /**
     * @hidden
     */
    private _parameters;
    /**
     * A list of parameters for the method.
     */
    parameters: Parameter[];
    /**
     * @hidden
     */
    private _getParameters();
    /**
     * @hidden
     */
    private _getParameterTypes();
    /**
     * @hidden
     */
    private _getParameterNames();
}
